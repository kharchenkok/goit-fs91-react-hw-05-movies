{"version":3,"file":"static/js/475.9a9aa3d1.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.js","services/fetchMovies.js","utils/GetDateYear.js","utils/ToastNotification.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  //grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 30px;\n`;\n\nexport const Overlay = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  justify-content: center;\n  color: white;\n\n  background: linear-gradient(\n    to bottom,\n    rgba(36, 36, 62, 0.9),\n    rgba(15, 12, 41, 1)\n  );\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  text-decoration: none;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  border-radius: 16px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n\n  transition: all 250ms ease-in-out;\n\n  & img {\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    aspect-ratio: 0.66/1;\n    object-fit: cover;\n    object-position: center;\n  }\n\n  & h2 {\n    display: flex;\n    flex-direction: column;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.5;\n    text-align: center;\n\n    & span {\n      color: #f65261;\n    }\n  }\n\n  &:hover {\n    transform: scale3d(1.05, 1.05, 1.05);\n  }\n`;\n","import React from 'react';\n\nimport { getDateYear } from '../../utils/GetDateYear';\nimport { List, Overlay, StyledLink } from './MoviesList.styled';\n\nimport defaultPoster from '../../images/default-movie.jpg';\nimport { BASE_IMG_URL } from '../../services/fetchMovies';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(({ id, poster_path = '', title, release_date }) => (\n        <li key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={\n                poster_path ? `${BASE_IMG_URL}${poster_path}` : defaultPoster\n              }\n              alt={title}\n              width=\"250\"\n            />\n            <Overlay>\n              <h2>\n                {title}\n                {release_date && <span>({getDateYear(release_date)})</span>}\n              </h2>\n            </Overlay>\n          </StyledLink>\n        </li>\n      ))}\n    </List>\n  );\n};\nexport default MoviesList;\n","import { getTrendingMovies } from '../../services/fetchMovies';\nimport { useEffect, useState } from 'react';\nimport { showError } from '../../utils/ToastNotification';\nimport { useLocation } from 'react-router-dom';\n\nimport MoviesList from '../../components/MoviesList';\nimport { Section, SectionTitle } from '../../components/Layout/Layout.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      getTrendingMovies()\n        .then(({ results }) => {\n          setTrendingMovies(results);\n        })\n        .catch(error => showError(error.message));\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <Section>\n      <SectionTitle>Trending today :</SectionTitle>\n      <MoviesList movies={trendingMovies} location={location} />\n    </Section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nconst API_KEY = 'cd39124e196d97716b8c0c326a9e8fad';\nconst TRENDING_ENDPOINT = 'trending/movie/day';\nconst MOVIE_ENDPOINT = 'movie';\nconst CAST_ENDPOINT = 'credits';\nconst REVIEWS_ENDPOINT = 'reviews';\nconst SEARCH_ENDPOINT = 'search/movie';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${TRENDING_ENDPOINT}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(\n    `${MOVIE_ENDPOINT}/${id}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(\n    `${MOVIE_ENDPOINT}/${id}/${CAST_ENDPOINT}?api_key=${API_KEY}`\n  );\n  return data;\n};\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${MOVIE_ENDPOINT}/${id}/${REVIEWS_ENDPOINT}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `${SEARCH_ENDPOINT}?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n","export function getDateYear(date) {\n  return new Date(date).getFullYear();\n}\n","import { toast } from 'react-toastify';\n\nexport function showError(message) {\n  toast.error(message, {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n}\n\nexport function showWarning(message) {\n  toast.warn(message, {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Overlay","_templateObject2","StyledLink","Link","_templateObject3","_ref","movies","location","_jsx","children","map","_ref2","id","_ref2$poster_path","poster_path","title","release_date","_jsxs","to","concat","state","from","src","BASE_IMG_URL","defaultPoster","alt","width","getDateYear","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","useLocation","useEffect","getTrendingMovies","then","results","catch","error","showError","message","Section","SectionTitle","MoviesList","axios","API_KEY","MOVIE_ENDPOINT","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","abrupt","stop","apply","arguments","getMovieById","_callee2","_yield$axios$get2","_context2","_x","getMovieCast","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getSearchMovies","_ref5","_callee5","query","_yield$axios$get5","_context5","_x4","date","Date","getFullYear","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}
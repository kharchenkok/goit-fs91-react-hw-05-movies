{"version":3,"file":"static/js/102.d0e0daab.chunk.js","mappings":"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","sources":["components/Buttons/ButtonSearch.jsx","components/Buttons/Buttons.styled.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.js","pages/Movies/Movies.js","services/fetchMovies.js","utils/GetDateYear.js","utils/ToastNotification.js"],"sourcesContent":["import React from 'react';\n\nimport { FaSearch } from 'react-icons/fa';\nimport { ButtonSearchStyled } from './Buttons.styled';\n\nconst ButtonSearch = ({ backLink }) => {\n  return (\n    <ButtonSearchStyled to={backLink}>\n      <FaSearch />\n      Search\n    </ButtonSearchStyled>\n  );\n};\nexport default ButtonSearch;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ButtonLink = styled(Link)`\n  padding: 8px 16px;\n  display: inline-flex;\n  max-width: 120px;\n  gap: 8px;\n  color: white;\n  font-size: 18px;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  border-radius: 4px;\n  border: none;\n\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const BackLink = styled(ButtonLink)`\n  background-color: #f65261;\n\n  &:hover {\n    background-color: #dd4957;\n  }\n`;\n\nexport const ButtonSearchStyled = styled(ButtonLink)`\n  background-color: teal;\n\n  &:hover {\n    background-color: #007373;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  //grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 30px;\n`;\n\nexport const Overlay = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  justify-content: center;\n  color: white;\n\n  background: linear-gradient(\n    to bottom,\n    rgba(36, 36, 62, 0.9),\n    rgba(15, 12, 41, 1)\n  );\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  text-decoration: none;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  border-radius: 16px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n\n  transition: all 250ms ease-in-out;\n\n  & img {\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    aspect-ratio: 0.66/1;\n    object-fit: cover;\n    object-position: center;\n  }\n\n  & h2 {\n    display: flex;\n    flex-direction: column;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.5;\n    text-align: center;\n\n    & span {\n      color: #f65261;\n    }\n  }\n\n  &:hover {\n    transform: scale3d(1.05, 1.05, 1.05);\n  }\n`;\n","import React from 'react';\n\nimport { getDateYear } from '../../utils/GetDateYear';\nimport { List, Overlay, StyledLink } from './MoviesList.styled';\n\nimport defaultPoster from '../../images/default-movie.jpg';\nimport { BASE_IMG_URL } from '../../services/fetchMovies';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(({ id, poster_path = '', title, release_date }) => (\n        <li key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={\n                poster_path ? `${BASE_IMG_URL}${poster_path}` : defaultPoster\n              }\n              alt={title}\n              width=\"250\"\n            />\n            <Overlay>\n              <h2>\n                {title}\n                {release_date && <span>({getDateYear(release_date)})</span>}\n              </h2>\n            </Overlay>\n          </StyledLink>\n        </li>\n      ))}\n    </List>\n  );\n};\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  background-color: transparent;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchInput = styled.input`\n  min-height: 40px;\n  display: block;\n  background-color: transparent;\n  border: none;\n  border-bottom: 0.5px solid darkgray;\n  width: 100%;\n  outline: none;\n  padding-left: 4px;\n  font-size: 18px;\n  &::placeholder {\n    font-size: 18px;\n\n    color: #f65261;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { SearchForm, SearchInput } from './Searchbar.styled';\nimport ButtonSearch from '../Buttons/ButtonSearch';\n\nconst Searchbar = ({ onFormSubmit, defaultSearchValue }) => {\n  const [userInput, setUserInput] = useState(defaultSearchValue || '');\n\n  useEffect(() => {\n    setUserInput(defaultSearchValue || '');\n  }, [defaultSearchValue]);\n\n  const updateSearchString = event => {\n    const { value } = event.target;\n    setUserInput(value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    onFormSubmit(userInput.trim());\n  };\n\n  return (\n    <SearchForm onSubmit={handleFormSubmit}>\n      <SearchInput\n        type={'text'}\n        value={userInput}\n        name=\"query\"\n        onChange={updateSearchString}\n        placeholder=\"Search movies...\"\n      />\n      <ButtonSearch type=\"submit\">Search</ButtonSearch>\n    </SearchForm>\n  );\n};\n\nexport default Searchbar;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from '../../services/fetchMovies';\nimport { showError } from '../../utils/ToastNotification';\nimport Searchbar from '../../components/Searchbar';\nimport MoviesList from '../../components/MoviesList';\nimport { Section } from '../../components/Layout/Layout.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const userSearch = searchParams.get('search') || '';\n\n  const fetchSearchMovies = useCallback(query => {\n    getSearchMovies(query)\n      .then(({ results }) => {\n        setMovies(results);\n      })\n      .catch(error => showError(error.message));\n  }, []);\n\n  useEffect(() => {\n    if (userSearch === '') return setMovies([]);\n\n    fetchSearchMovies(userSearch);\n  }, [fetchSearchMovies, userSearch]);\n\n  const handleFormSubmit = userInput => {\n    const query = userInput.trim();\n    if (query === '') {\n      setSearchParams({});\n    } else {\n      setSearchParams({ search: query });\n      fetchSearchMovies(query);\n    }\n  };\n\n  return (\n    <Section>\n      <Searchbar\n        onFormSubmit={handleFormSubmit}\n        defaultSearchValue={userSearch}\n      />\n\n      {movies && movies.length > 0 && (\n        <MoviesList movies={movies} location={location} />\n      )}\n    </Section>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nconst API_KEY = 'cd39124e196d97716b8c0c326a9e8fad';\nconst TRENDING_ENDPOINT = 'trending/movie/day';\nconst MOVIE_ENDPOINT = 'movie';\nconst CAST_ENDPOINT = 'credits';\nconst REVIEWS_ENDPOINT = 'reviews';\nconst SEARCH_ENDPOINT = 'search/movie';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`${TRENDING_ENDPOINT}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(\n    `${MOVIE_ENDPOINT}/${id}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(\n    `${MOVIE_ENDPOINT}/${id}/${CAST_ENDPOINT}?api_key=${API_KEY}`\n  );\n  return data;\n};\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${MOVIE_ENDPOINT}/${id}/${REVIEWS_ENDPOINT}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `${SEARCH_ENDPOINT}?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n","export function getDateYear(date) {\n  return new Date(date).getFullYear();\n}\n","import { toast } from 'react-toastify';\n\nexport function showError(message) {\n  toast.error(message, {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n}\n\nexport function showWarning(message) {\n  toast.warn(message, {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n}\n"],"names":["_ref","backLink","_jsxs","ButtonSearchStyled","to","children","_jsx","FaSearch","ButtonLink","styled","Link","_templateObject","_taggedTemplateLiteral","BackLink","_templateObject2","_templateObject3","List","Overlay","StyledLink","movies","location","map","_ref2","id","_ref2$poster_path","poster_path","title","release_date","concat","state","from","src","BASE_IMG_URL","defaultPoster","alt","width","getDateYear","SearchForm","SearchInput","onFormSubmit","defaultSearchValue","_useState","useState","_useState2","_slicedToArray","userInput","setUserInput","useEffect","onSubmit","event","preventDefault","trim","type","value","name","onChange","target","placeholder","ButtonSearch","setMovies","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","userSearch","get","fetchSearchMovies","useCallback","query","getSearchMovies","then","results","catch","error","showError","message","Section","Searchbar","search","length","MoviesList","axios","API_KEY","MOVIE_ENDPOINT","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","abrupt","stop","apply","arguments","getMovieById","_callee2","_yield$axios$get2","_context2","_x","getMovieCast","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4","date","Date","getFullYear","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}